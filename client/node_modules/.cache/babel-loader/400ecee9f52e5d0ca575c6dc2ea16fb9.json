{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\Node Projects\\\\react\\\\ecomm\\\\client\\\\src\\\\components\\\\mainpages\\\\categories\\\\Categories.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { GlobalState } from '../../../GlobalState';\nimport axios from 'axios';\n\nfunction Categories() {\n  _s();\n\n  const state = useContext(GlobalState);\n  const [categories] = state.categoriesAPI.categories;\n  const [category, setCategory] = useState(''); // const [token] = state.token\n  // const [callback, setCallback] = state.categoriesAPI.callback\n  // const [onEdit, setOnEdit] = useState(false)\n  // const [id, setID] = useState('')\n\n  const createCategory = async e => {\n    e.preventDefault();\n\n    try {\n      if (onEdit) {\n        const res = await axios.put(`/api/category/${id}`, {\n          name: category\n        }, {\n          headers: {\n            Authorization: token\n          }\n        });\n        alert(res.data.msg);\n      } else {\n        const res = await axios.post('/api/category', {\n          name: category\n        }, {\n          headers: {\n            Authorization: token\n          }\n        });\n        alert(res.data.msg);\n      }\n\n      setOnEdit(false);\n      setCategory('');\n      setCallback(!callback);\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  const editCategory = async (id, name) => {\n    setID(id);\n    setCategory(name);\n    setOnEdit(true);\n  };\n\n  const deleteCategory = async id => {\n    try {\n      const res = await axios.delete(`/api/category/${id}`, {\n        headers: {\n          Authorization: token\n        }\n      });\n      alert(res.data.msg);\n      setCallback(!callback);\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"categories\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: createCategory,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"category\",\n        children: \"Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"category\",\n        value: category,\n        required: true,\n        onChange: e => setCategory(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: onEdit ? \"Update\" : \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col\",\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: category.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => editCategory(category._id, category.name),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteCategory(category._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }, this)]\n      }, category._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Categories, \"hykkNYF1H9jAayMUrD8683TwRLc=\");\n\n_c = Categories;\nexport default Categories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Categories\");","map":{"version":3,"sources":["E:/Node Projects/react/ecomm/client/src/components/mainpages/categories/Categories.js"],"names":["React","useState","useContext","GlobalState","axios","Categories","state","categories","categoriesAPI","category","setCategory","createCategory","e","preventDefault","onEdit","res","put","id","name","headers","Authorization","token","alert","data","msg","post","setOnEdit","setCallback","callback","err","response","editCategory","setID","deleteCategory","delete","target","value","map","_id"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from 'react'\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport axios from 'axios'\r\n\r\nfunction Categories() {\r\n    const state = useContext(GlobalState)\r\n    const [categories] = state.categoriesAPI.categories\r\n    const [category, setCategory] = useState('')\r\n    // const [token] = state.token\r\n    // const [callback, setCallback] = state.categoriesAPI.callback\r\n    // const [onEdit, setOnEdit] = useState(false)\r\n    // const [id, setID] = useState('')\r\n\r\n    const createCategory = async e =>{\r\n        e.preventDefault()\r\n        try {\r\n            if(onEdit){\r\n                const res = await axios.put(`/api/category/${id}`, {name: category}, {\r\n                    headers: {Authorization: token}\r\n                })\r\n                alert(res.data.msg)\r\n            }else{\r\n                const res = await axios.post('/api/category', {name: category}, {\r\n                    headers: {Authorization: token}\r\n                })\r\n                alert(res.data.msg)\r\n            }\r\n            setOnEdit(false)\r\n            setCategory('')\r\n            setCallback(!callback)\r\n            \r\n        } catch (err) {\r\n            alert(err.response.data.msg)\r\n        }\r\n    }\r\n\r\n    const editCategory = async (id, name) =>{\r\n        setID(id)\r\n        setCategory(name)\r\n        setOnEdit(true)\r\n    }\r\n\r\n    const deleteCategory = async id =>{\r\n        try {\r\n            const res = await axios.delete(`/api/category/${id}`, {\r\n                headers: {Authorization: token}\r\n            })\r\n            alert(res.data.msg)\r\n            setCallback(!callback)\r\n        } catch (err) {\r\n            alert(err.response.data.msg)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"categories\">\r\n            <form onSubmit={createCategory}>\r\n                <label htmlFor=\"category\">Category</label>\r\n                <input type=\"text\" name=\"category\" value={category} required\r\n                onChange={e => setCategory(e.target.value)} />\r\n\r\n                <button type=\"submit\">{onEdit? \"Update\" : \"Create\"}</button>\r\n            </form>\r\n\r\n            <div className=\"col\">\r\n                {\r\n                    categories.map(category => (\r\n                        <div className=\"row\" key={category._id}>\r\n                            <p>{category.name}</p>\r\n                            <div>\r\n                                <button onClick={() => editCategory(category._id, category.name)}>Edit</button>\r\n                                <button onClick={() => deleteCategory(category._id)}>Delete</button>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Categories\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\Node Projects\\\\react\\\\ecomm\\\\client\\\\src\\\\components\\\\mainpages\\\\createProduct\\\\CreateProduct.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { GlobalState } from '../../../GlobalState';\nimport Loading from '../utils/loading/Loading';\nimport { useHistory, useParams } from 'react-router-dom';\nconst initialState = {\n  product_id: '',\n  title: '',\n  price: 0,\n  description: 'How to and tutorial videos of cool CSS effect, Web Design ideas,JavaScript libraries, Node.',\n  content: 'Welcome to our channel Ilu AT. Here you can learn web designing, UI/UX designing, html css tutorials, css animations and css effects, javascript and jquery tutorials and related so on.',\n  category: '',\n  _id: ''\n};\n\nfunction CreateProduct() {\n  _s();\n\n  const state = useContext(GlobalState);\n  const [product, setProduct] = useState(initialState);\n  const [categories] = state.categoriesAPI.categories; // const [images, setImages] = useState(false)\n\n  const [loading, setLoading] = useState(false);\n  const [isAdmin] = state.userAPI.isAdmin;\n  const [token] = state.token;\n  const history = useHistory();\n  const param = useParams();\n  const [products] = state.productsAPI.products;\n  const [onEdit, setOnEdit] = useState(false); // const [callback, setCallback] = state.productsAPI.callback\n\n  useEffect(() => {\n    if (param.id) {\n      setOnEdit(true);\n      products.forEach(product => {\n        if (product._id === param.id) {\n          setProduct(product); // setImages(product.images)\n        }\n      });\n    } else {\n      setOnEdit(false);\n      setProduct(initialState); // setImages(false)\n    }\n  }, [param.id, products]); // const handleUpload = async e =>{\n  //     e.preventDefault()\n  //     try {\n  //         if(!isAdmin) return alert(\"You're not an admin\")\n  //         const file = e.target.files[0]\n  //         if(!file) return alert(\"File not exist.\")\n  //         if(file.size > 1024 * 1024) // 1mb\n  //             return alert(\"Size too large!\")\n  //         if(file.type !== 'image/jpeg' && file.type !== 'image/png') // 1mb\n  //             return alert(\"File format is incorrect.\")\n  //         let formData = new FormData()\n  //         formData.append('file', file)\n  //         setLoading(true)\n  //         const res = await axios.post('/api/upload', formData, {\n  //             headers: {'content-type': 'multipart/form-data', Authorization: token}\n  //         })\n  //         setLoading(false)\n  //         // var querys = this.state.context.find('#fls');\n  //         // console.log(file);\n  //         const fls = file;\n  //         console.log(fls);\n  //        setImages(res.data)\n  //     } catch (err) {\n  //         alert(err.response.data.msg)\n  //     }\n  // }\n\n  const handleDestroy = async () => {\n    try {\n      if (!isAdmin) return alert(\"You're not an admin\");\n      setLoading(true);\n      await axios.post('/api/destroy', {\n        public_id: images\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n      setLoading(false); // setImages(false)\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  const handleChangeInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setProduct({ ...product,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      if (!isAdmin) return alert(\"You're not an admin\"); // if(!images) return alert(\"No Image Upload\")\n\n      if (onEdit) {\n        // await axios.put(`/api/products/${product._id}`, {...product, images}, {\n        await axios.put(`/api/products/${product._id}`, { ...product\n        }, {\n          headers: {\n            Authorization: token\n          }\n        });\n      } else {\n        // await axios.post('/api/products', {...product, images}, {\n        await axios.post('/api/products', { ...product\n        }, {\n          headers: {\n            Authorization: token\n          }\n        });\n      } // setCallback(!callback)\n      // history.push(\"/\")\n\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  const styleUpload = {\n    display: images ? \"block\" : \"none\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create_product\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"fls\",\n        id: \"fls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"product_id\",\n          children: \"Product ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"product_id\",\n          id: \"product_id\",\n          required: true,\n          value: product.product_id,\n          onChange: handleChangeInput,\n          disabled: onEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          id: \"title\",\n          required: true,\n          value: product.title,\n          onChange: handleChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"price\",\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"price\",\n          id: \"price\",\n          required: true,\n          value: product.price,\n          onChange: handleChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          name: \"description\",\n          id: \"description\",\n          required: true,\n          value: product.description,\n          rows: \"5\",\n          onChange: handleChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"content\",\n          children: \"Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          name: \"content\",\n          id: \"content\",\n          required: true,\n          value: product.content,\n          rows: \"7\",\n          onChange: handleChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"categories\",\n          children: \"Categories: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"category\",\n          value: product.category,\n          onChange: handleChangeInput,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Please select a category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: category._id,\n            children: category.name\n          }, category._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: onEdit ? \"Update\" : \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateProduct, \"zs0NLb4ls015YMaAKz/+w5/c27k=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = CreateProduct;\nexport default CreateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateProduct\");","map":{"version":3,"sources":["E:/Node Projects/react/ecomm/client/src/components/mainpages/createProduct/CreateProduct.js"],"names":["React","useState","useContext","useEffect","axios","GlobalState","Loading","useHistory","useParams","initialState","product_id","title","price","description","content","category","_id","CreateProduct","state","product","setProduct","categories","categoriesAPI","loading","setLoading","isAdmin","userAPI","token","history","param","products","productsAPI","onEdit","setOnEdit","id","forEach","handleDestroy","alert","post","public_id","images","headers","Authorization","err","response","data","msg","handleChangeInput","e","name","value","target","handleSubmit","preventDefault","put","styleUpload","display","map"],"mappings":"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","sourcesContent":["import React, {useState, useContext, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport Loading from '../utils/loading/Loading'\r\nimport {useHistory, useParams} from 'react-router-dom'\r\n\r\nconst initialState = {\r\n    product_id: '',\r\n    title: '',\r\n    price: 0,\r\n    description: 'How to and tutorial videos of cool CSS effect, Web Design ideas,JavaScript libraries, Node.',\r\n    content: 'Welcome to our channel Ilu AT. Here you can learn web designing, UI/UX designing, html css tutorials, css animations and css effects, javascript and jquery tutorials and related so on.',\r\n    category: '',\r\n    _id: ''\r\n}\r\n\r\nfunction CreateProduct() {\r\n    const state = useContext(GlobalState)\r\n    const [product, setProduct] = useState(initialState)\r\n    const [categories] = state.categoriesAPI.categories\r\n    // const [images, setImages] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n\r\n    const [isAdmin] = state.userAPI.isAdmin\r\n    const [token] = state.token\r\n\r\n    const history = useHistory()\r\n    const param = useParams()\r\n\r\n    const [products] = state.productsAPI.products\r\n    const [onEdit, setOnEdit] = useState(false)\r\n    // const [callback, setCallback] = state.productsAPI.callback\r\n\r\n    useEffect(() => {\r\n        if(param.id){\r\n            setOnEdit(true)\r\n            products.forEach(product => {\r\n                if(product._id === param.id) {\r\n                    setProduct(product)\r\n                    // setImages(product.images)\r\n                }\r\n            })\r\n        }else{\r\n            setOnEdit(false)\r\n            setProduct(initialState)\r\n            // setImages(false)\r\n        }\r\n    }, [param.id, products])\r\n\r\n    // const handleUpload = async e =>{\r\n    //     e.preventDefault()\r\n    //     try {\r\n    //         if(!isAdmin) return alert(\"You're not an admin\")\r\n    //         const file = e.target.files[0]\r\n            \r\n    //         if(!file) return alert(\"File not exist.\")\r\n\r\n    //         if(file.size > 1024 * 1024) // 1mb\r\n    //             return alert(\"Size too large!\")\r\n\r\n    //         if(file.type !== 'image/jpeg' && file.type !== 'image/png') // 1mb\r\n    //             return alert(\"File format is incorrect.\")\r\n\r\n    //         let formData = new FormData()\r\n            \r\n    //         formData.append('file', file)\r\n\r\n    //         setLoading(true)\r\n    //         const res = await axios.post('/api/upload', formData, {\r\n    //             headers: {'content-type': 'multipart/form-data', Authorization: token}\r\n    //         })\r\n    //         setLoading(false)\r\n    //         // var querys = this.state.context.find('#fls');\r\n    //         // console.log(file);\r\n    //         const fls = file;\r\n            \r\n    //         console.log(fls);\r\n    //        setImages(res.data)\r\n\r\n    //     } catch (err) {\r\n    //         alert(err.response.data.msg)\r\n    //     }\r\n    // }\r\n\r\n    const handleDestroy = async () => {\r\n        try {\r\n            if(!isAdmin) return alert(\"You're not an admin\")\r\n            setLoading(true)\r\n         await axios.post('/api/destroy', {public_id: images}, {\r\n                headers: {Authorization: token}\r\n            })\r\n          \r\n            setLoading(false)\r\n           \r\n            // setImages(false)\r\n        } catch (err) {\r\n            alert(err.response.data.msg)\r\n        }\r\n    }\r\n\r\n    const handleChangeInput = e =>{\r\n        const {name, value} = e.target\r\n        setProduct({...product, [name]:value})\r\n    }\r\n\r\n    const handleSubmit = async e =>{\r\n        e.preventDefault()\r\n        \r\n        try {\r\n            if(!isAdmin) return alert(\"You're not an admin\")\r\n            // if(!images) return alert(\"No Image Upload\")\r\n\r\n            if(onEdit){\r\n                // await axios.put(`/api/products/${product._id}`, {...product, images}, {\r\n                    await axios.put(`/api/products/${product._id}`, {...product}, {\r\n                    headers: {Authorization: token}\r\n                })\r\n            }else{\r\n               \r\n                // await axios.post('/api/products', {...product, images}, {\r\n                    await axios.post('/api/products', {...product}, {\r\n                    headers: {Authorization: token}\r\n                })\r\n            }\r\n            // setCallback(!callback)\r\n            // history.push(\"/\")\r\n        } catch (err) {\r\n           \r\n            alert(err.response.data.msg)\r\n        }\r\n    }\r\n\r\n    const styleUpload = {\r\n        display: images ? \"block\" : \"none\"\r\n    }\r\n    return (\r\n        <div className=\"create_product\">\r\n           \r\n\r\n            <form onSubmit={handleSubmit} >\r\n            {/* <div className=\"upload\">\r\n                <input type=\"file\" name=\"file\" id=\"file_up\" \r\n                onChange={handleUpload}\r\n                />\r\n                {\r\n                    loading ? \r\n                    <div id=\"file_img\"><Loading /></div>\r\n\r\n                    :<div id=\"file_img\" style={styleUpload}>\r\n                       \r\n                        <img src={`/images/${images ? images:  ''}`}\r\n                        alt=\"\"/>\r\n                        <span \r\n                        onClick={handleDestroy}\r\n                        >X</span>\r\n                    </div>\r\n                } \r\n                \r\n            </div> */}\r\n                <input type=\"file\" name=\"fls\" id=\"fls\"/>\r\n                <div className=\"row\">\r\n                    <label htmlFor=\"product_id\">Product ID</label>\r\n                    <input type=\"text\" name=\"product_id\" id=\"product_id\" required\r\n                    value={product.product_id} \r\n                    onChange={handleChangeInput}\r\n                     disabled={onEdit} \r\n                    />\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <label htmlFor=\"title\">Title</label>\r\n                    <input type=\"text\" name=\"title\" id=\"title\" required\r\n                     value={product.title} \r\n                    onChange={handleChangeInput} \r\n                    />\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <label htmlFor=\"price\">Price</label>\r\n                    <input type=\"number\" name=\"price\" id=\"price\" required\r\n                    value={product.price} \r\n                    onChange={handleChangeInput}\r\n                     />\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <label htmlFor=\"description\">Description</label>\r\n                    <textarea type=\"text\" name=\"description\" id=\"description\" required\r\n                    value={product.description} rows=\"5\" \r\n                    onChange={handleChangeInput} \r\n                    />\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <label htmlFor=\"content\">Content</label>\r\n                    <textarea type=\"text\" name=\"content\" id=\"content\" required\r\n                    value={product.content} rows=\"7\" \r\n                    onChange={handleChangeInput}\r\n                     />\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <label htmlFor=\"categories\">Categories: </label>\r\n                    <select name=\"category\"\r\n                     value={product.category} \r\n                     onChange={handleChangeInput} \r\n                     >\r\n                        <option value=\"\">Please select a category</option>\r\n                        {\r\n                            categories.map(category => (\r\n                                <option \r\n                                value={category._id} key={category._id}\r\n                                >\r\n                                    {category.name}\r\n                                </option>\r\n                            ))\r\n                        }\r\n                    </select>\r\n                </div>\r\n\r\n                <button type=\"submit\">{onEdit? \"Update\" : \"Create\"}</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateProduct\r\n"]},"metadata":{},"sourceType":"module"}